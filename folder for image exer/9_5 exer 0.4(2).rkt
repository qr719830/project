#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 72 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 1278 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 258
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |9_5 exer"
 #" 0.4(2)|) (read-case-sensitive #t"
 #") (teachpacks ((lib \"image.rkt\" \"teachpack\" \"2htdp\"))) (htdp-s"
 #"ettings #(#t constructor repeating-decimal #f #t none #f ((lib \"ima"
 #"ge.rkt\" \"teachpack\" \"2htdp\")))))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";make-point: Number Number -> point"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";GIVEN: x-coordinate and y-coordinate of a point in a two-dimensiona"
 #"l plane"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";RETURNS: the point"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";(make-point 5 3)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";(make-point -1 -2)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";point?: Any -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";GIVEN:  an instance of any type"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";RETURNS: if this instance is an instance of point struct"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";(point? true) => false"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(point? (make-point 5 3)) => true"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";point-x: point -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";GIVEN: a point in a two-dimensional plane"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";RETURN: its x-coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(point-x (make-point 1 2)) => 1"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";(point-x (make-point -4 7)) => -4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";point-y: point -> Number"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";GIVEN: a point in a two-dimensional plane"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";RETURN: its y-coordinate"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(point-y (make-point 1 2)) => 2"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(point-y (make-point -4 7)) => 7"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 12"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";1 (make-point 5 3)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";2,3 false"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";4 true"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";5 8"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";6 15"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 13"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";(make-point true false)  true"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 14"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";make-student student? student-id student-name student-major"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 15"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"student"
0 0 24 3 2 #" ("
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 5 #"major"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";;A student is a (make-student Number String String -> student)."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;It represents a student in a college."
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;Interpretation:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;  id = student's college id number."
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;  name = student's name"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;  major = student's current major in college"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 16"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 2 #" ("
0 0 14 3 6 #"bitmap"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"est2162.jpg\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"Stick to the recipe\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"Stick to the recipe\""
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #") "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 1 #" "
0 0 14 3 8 #"my-image"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 17"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 21 3 2 #"32"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 18"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";32 64 and 64 128"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";rec-sequence: Number -> image"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";GIVEN: the number represents the nth element in a sequence"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";RETURN: the nth image in the rectangle sequence"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(rec-sequence 6) => "
0 12           4 17 169
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 64 0) #(struct:point 64 128) #(struct:point 0 128)) 255 \"b"
 #"lue\")) #(struct:bb 64 128 128) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";(rec-sequence 7) => "
0 12           4 17 172
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 128 0) #(struct:point 128"
 #" 256) #(struct:point 0 256)) 255 \"blue\")) #(struct:bb 128 256 256)"
 #" #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"rec-sequence"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 19"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";rel-rec-sequence: Number Number -> Rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 97
(
 #";GIVEN: the width of a rectangle and a proportion,the height of the "
 #"rectangle is produced by the "
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";       formula height = width * proportion"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";RETURNS: the rectangle"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; (rel-rec-sequence 100 0.8) => "
0 12           4 17 169
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 80 0) #(struct:point 80 100) #(struct:point 0 100)) 255 \"b"
 #"lue\")) #(struct:bb 80 100 100) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #"; (rel-rec-sequence 10 2.0) => "
0 12           4 17 165
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 20 0) #(struct:point 20 10) #(struct:point 0 10)) 255 \"blu"
 #"e\")) #(struct:bb 20 10 10) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"rel-rec-sequence"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #") "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 88
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 20"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"75"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"60"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"80"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"40"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 3 #"110"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"95"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"90"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"95"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"50"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";(define new-area (place-image (circle 10 \"solid\" \"blue\") 100 20"
 #" draw-area))"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";(define new-area2 (place-image (rectangle 30 40 \"solid\" \"blue\")"
 #" 100 50 new-area))"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
(
 #";(place-image (rectangle 30 10 \"solid\" \"blue\")  90 40 new-area2)"
 #")"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";(place-image "
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 36 #";  (rectangle 30 10 \"solid\" \"blue\") "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 6 #"; 100 "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 4 #";40 "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 14 #";(place-image "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 39 #";     (rectangle 10 50 \"solid\" \"blue\") "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 17 3 8 #";    90 "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 7 #";   90 "
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 17 3 16 #";  (place-image "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 38 #";    (rectangle 10 50 \"solid\" \"blue\") "
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 8 #";   115 "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 6 #";  90 "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 23 #"; (empty-scene 200 200)"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 3 #"; )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 3 #"; )"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 21"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"person"
0 0 24 3 2 #" ("
0 0 14 3 10 #"first-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"last-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"age"
0 0 24 3 1 #" "
0 0 14 3 6 #"height"
0 0 24 3 1 #" "
0 0 14 3 6 #"weight"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;A person is a (make-person String String Number Number Number -> p"
 #"erson)."
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";;It represents a person."
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;Interpretation:"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;  first-name = this person's first name."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;  last-name = this person's last name"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;  age = how old the person is"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;  height = how tall the person is"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;  weight = how wide the person is"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cal-hinprop"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cal-winprop"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-psnimg"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"125"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"95"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"95"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 1 #"w"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";person-image: person -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";GIVEN:  a person's information"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";RETURNS: a image of this person"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";(person-image (make-person \"Ryan\" \"copper\" 48 110 80)) => "
0 12           4 17 3165
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 120 45 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:point 0 0) #(struct:point 10 0) #(struct:point 10 3"
 #"0) #(struct:point 0 30)) 255 \"blue\"))) #(struct:translate 0 0 #(st"
 #"ruct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point "
 #"200 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 110 35 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:point 0 0) #(struct:point 20 0) #(struct:point 20 10) #("
 #"struct:point 0 10)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 2"
 #"00) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 70 45 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 10 0) #(struct:point 10 30) #(struct"
 #":point 0 30)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 70 35 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 20 0) #(struct:point 20 10) #(struct:point"
 #" 0 10)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 200 0) #(struct:point 200 200) #(struct"
 #":point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 105 70 #(struct:translate 0 0 #(struct:polygon (#(struct:point"
 #" 0 0) #(struct:point 10 0) #(struct:point 10 50) #(struct:point 0 50"
 #")) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 200 0) #(struct:point 200 200) #(struct:poin"
 #"t 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 85 70 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 10 0) #(struct:point 10 50) #(struct:point 0 50)) 255"
 #" \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 85 30"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 30 0) #(struct:point 30 40) #(struct:point 0 40)) 255 \"blu"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 200 0) #(struct:point 200 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 90 10 #(str"
 #"uct:translate 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"0 0) #(struct:point 200 200) #(struct:point 0 200)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:point 0 0) #(struct:point 200 0) #(stru"
 #"ct:point 200 200) #(struct:point 0 200)) outline #(struct:pen \"blac"
 #"k\" 2 solid round round)))) #(struct:translate 0 0 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 200 0) #("
 #"struct:point 200 200) #(struct:point 0 200)) 255 \"white\"))))))))))"
 #")))))))))))))))))))))))))))) #(struct:bb 200 200 200) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";(person-image (make-person \"Ryan\" \"copper\" 48 100 80))) => "
0 12           4 17 3361
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 2000/11 0) #(stru"
 #"ct:point 2000/11 200) #(struct:point 0 200)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 1200/11 45 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:point 0 0) #(struct:point 100/11 0) #(s"
 #"truct:point 100/11 30) #(struct:point 0 30)) 255 \"blue\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"00/11 0) #(struct:point 2000/11 200) #(struct:point 0 200)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 100 35 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 20"
 #"0/11 0) #(struct:point 200/11 10) #(struct:point 0 10)) 255 \"blue\""
 #"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(stru"
 #"ct:point 2000/11 0) #(struct:point 2000/11 200) #(struct:point 0 200"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 700/11"
 #" 45 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(s"
 #"truct:point 100/11 0) #(struct:point 100/11 30) #(struct:point 0 30)"
 #") 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 2000/11 0) #(struct:point 2000/11 200) #(stru"
 #"ct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 700/11 35 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 200/11 0) #(struct:point 200/11 10) #(stru"
 #"ct:point 0 10)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 2000/11 0) #(struct:point 2000/"
 #"11 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 1050/11 70 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 100/11 0) #(struct:point 10"
 #"0/11 50) #(struct:point 0 50)) 255 \"blue\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 2000/11 0) #(str"
 #"uct:point 2000/11 200) #(struct:point 0 200)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 850/11 70 #(struct:translate 0 "
 #"0 #(struct:polygon (#(struct:point 0 0) #(struct:point 100/11 0) #(s"
 #"truct:point 100/11 50) #(struct:point 0 50)) 255 \"blue\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 20"
 #"00/11 0) #(struct:point 2000/11 200) #(struct:point 0 200)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 850/11 30 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point"
 #" 300/11 0) #(struct:point 300/11 40) #(struct:point 0 40)) 255 \"blu"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 2000/11 0) #(struct:point 2000/11 200) #(struct:point 0 "
 #"200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 900"
 #"/11 120/11 #(struct:translate 100/11 100/11 #(struct:ellipse 200/11 "
 #"200/11 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(str"
 #"uct:point 0 0) #(struct:point 2000/11 0) #(struct:point 2000/11 200)"
 #" #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 2000/11 0) #(struct:point 2000/11 200) #("
 #"struct:point 0 200)) outline #(struct:pen \"black\" 2 solid round ro"
 #"und)))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 2000/11 0) #(struct:point 200"
 #"0/11 200) #(struct:point 0 200)) 255 \"white\"))))))))))))))))))))))"
 #")))))))))))))))) #(struct:bb 2000/11 200 200) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 3 #") ("
0 0 14 3 11 #"draw-psnimg"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cal-winprop"
0 0 24 3 2 #" ("
0 0 14 3 13 #"person-weight"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"cal-hinprop"
0 0 24 3 2 #" ("
0 0 14 3 13 #"person-height"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"person-image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-person"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"copper\""
0 0 24 3 1 #" "
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 4 #"1100"
0 0 24 3 1 #" "
0 0 21 3 3 #"800"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"person-image"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-person"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Ryan\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"copper\""
0 0 24 3 1 #" "
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 176
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";ex 21a"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";person-image-name: person -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";GIVEN:  a person's information"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";RETURNS: a image of this person with his name under it"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";Examples:"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";(person-image-name (make-person \"Ryan\" \"Copper\" 48 110 80)) =>"
0 12           4 17 5059
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:p"
 #"oint 200 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 42.0 138.5 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 7.0 11.5 #(struct:"
 #"text \"R\" 0 1 \"black\" 20 #f swiss normal normal #f))) #(struct:tr"
 #"anslate 14.0 0.0 #(struct:translate 5.0 11.5 #(struct:text \"y\" 0 1"
 #" \"black\" 20 #f swiss normal normal #f))))) #(struct:translate 24.0"
 #" 0.0 #(struct:translate 5.5 11.5 #(struct:text \"a\" 0 1 \"black\" 2"
 #"0 #f swiss normal normal #f))))) #(struct:translate 35.0 0.0 #(struc"
 #"t:translate 5.0 11.5 #(struct:text \"n\" 0 1 \"black\" 20 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 45.0 0.0 #(struct:translate "
 #"3.0 11.5 #(struct:text \" \" 0 1 \"black\" 20 #f swiss normal normal"
 #" #f))))) #(struct:translate 51.0 0.0 #(struct:translate 7.0 11.5 #(s"
 #"truct:text \"C\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(s"
 #"truct:translate 65.0 0.0 #(struct:"
 #"translate 5.5 11.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 76.0 0.0 #(struct:translate 5."
 #"5 11.5 #(struct:text \"p\" 0 1 \"black\" 20 #f swiss normal normal #"
 #"f))))) #(struct:translate 87.0 0.0 #(struct:translate 5.5 11.5 #(str"
 #"uct:text \"p\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(str"
 #"uct:translate 98.0 0.0 #(struct:translate 5.5 11.5 #(struct:text \"e"
 #"\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 109.0 0.0 #(struct:translate 3.5 11.5 #(struct:text \"r\" 0 1 \"bl"
 #"ack\" 20 #f swiss normal normal #f))))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 2"
 #"00 200) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 120 45 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 10 0) #(struct:point 10 30) #(s"
 #"truct:point 0 30)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 20"
 #"0) #(struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 110 35 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 20 0) #(struct:point 20 10) #(struct"
 #":point 0 10)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 200 0) #(struct:point 200 200) #("
 #"struct:point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 70 45 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 10 0) #(struct:point 10 30) #(struct:point"
 #" 0 30)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 200 0) #(struct:point 200 200) #(struct"
 #":point 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 70 35 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 20 0) #(struct:point 20 10) #(struct:point 0 10)"
 #") 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:poi"
 #"nt 0 0) #(struct:point 200 0) #(struct:point 200 200) #(struct:point"
 #" 0 200)) #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"105 70 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 10 0) #(struct:point 10 50) #(struct:point 0 50)) 255"
 #" \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 200 0) #(struct:point 200 200) #(struct:point 0 20"
 #"0)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 85 70"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 10 0) #(struct:point 10 50) #(struct:point 0 50)) 255 \"blu"
 #"e\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 200 0) #(struct:point 200 200) #(struct:point 0 200)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 85 30 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 30 0) #(struct:point 30 40) #(struct:point 0 40)) 255 \"blue\")))"
 #" #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:"
 #"point 200 0) #(struct:point 200 200) #(struct:point 0 200)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 90 10 #(struct:tr"
 #"anslate 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:tran"
 #"slate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 200 0) #"
 #"(struct:point 200 200) #(struct:point 0 200)) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:point 0 0) #(struct:point 200 0) #(struct:poi"
 #"nt 200 200) #(struct:point 0 200)) outline #(struct:pen \"black\" 2 "
 #"solid round round)))) #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 200 0) #(struct"
 #":point 200 200) #(struct:point 0 200)) 255 \"white\"))))))))))))))))"
 #")))))))))))))))))))))))))) #(struct:bb 200 200 200.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";(person-image-name (make-person \"Jenn\" \"Potter\" 28 90 70)) => "
0 12           4 17 5316
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 1800/11 0) #(stru"
 #"ct:point 1800/11 175) #(struct:point 0 175)) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 37.0 111.22727272727273 #(struct"
 #":overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 5.0 11.5 #(struct:text \"J\" 0 1 \"black\" 20 #f swiss normal nor"
 #"mal #f))) #(struct:translate 10.0 0.0 #(struct:translate 5.5 11.5 #("
 #"struct:text \"e\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #("
 #"struct:translate 21.0 0.0 #(struct:translate 5.0 11.5 #(struct:text "
 #"\"n\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struct:trans"
 #"late 31.0 0.0 #(struct:translate 5.0 11.5 #(struct:text \"n\" 0 1 \""
 #"black\" 20 #f swiss normal normal #f))))) #(struct:translate 41.0 0."
 #"0 #(struct:translate 3.0 11.5 #(struct:text \" \" 0 1 \"black\" 20 #"
 #"f swiss normal normal #f))))) #(struct:translate 47.0 0.0 #(struct:t"
 #"ranslate 6.5 11.5 #(struct:text \"P\" 0 1 \"black\" 20 #f swiss norm"
 #"al normal #f))))) #(struct:translate 60.0 0.0 #(struct:translate 5.5"
 #" 11.5 #(struct:text \"o\" 0 1 \"black\" 20 #f swiss normal normal #f"
 #"))))) #(struct:translate 71.0 0.0 #(struct:translate 3.0 11.5 #(stru"
 #"ct:text \"t\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 77.0 0.0 #(struct:tr"
 #"anslate 3.0 11.5 #(struct:text \"t\" 0 1 \"black\" 20 #f swiss norma"
 #"l normal #f))))) #(struct:translate 83.0 0.0 #(struct:translate 5.5 "
 #"11.5 #(struct:text \"e\" 0 1 \"black\" 20 #f swiss normal normal #f)"
 #")))) #(struct:translate 94.0 0.0 #(struct:translate 3.5 11.5 #(struc"
 #"t:text \"r\" 0 1 \"black\" 20 #f swiss normal normal #f))))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 18"
 #"00/11 0) #(struct:point 1800/11 175) #(struct:point 0 175)) #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 1080/11 315/8 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:p"
 #"oint 90/11 0) #(struct:point 90/11 105/4) #(struct:point 0 105/4)) 2"
 #"55 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point "
 #"0 0) #(struct:point 1800/11 0) #(struct:point 1800/11 175) #(struct:"
 #"point 0 175)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 90 245/8 #(struct:translate 0 0 #(struct:polygon (#(struct:poin"
 #"t 0 0) #(struct:point 180/11 0) #(struct:point 180/11 35/4) #(struct"
 #":point 0 35/4)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 1800/11 0) #(struct:point 1800/"
 #"11 175) #(struct:point 0 175)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 630/11 315/8 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:point 0 0) #(struct:point 90/11 0) #(struct:point 9"
 #"0/11 105/4) #(struct:point 0 105/4)) 255 \"blue\"))) #(struct:transl"
 #"ate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 1800/11 0)"
 #" #(struct:point 1800/11 175) #(struct:point 0 175)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 630/11 245/8 #(struct:tra"
 #"nslate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 180/"
 #"11 0) #(struct:point 180/11 35/4) #(struct:point 0 35/4)) 255 \"blue"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 1800/11 0) #(struct:point 1800/11 175) #(struct:point 0 1"
 #"75)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 945/"
 #"11 245/4 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 90/11 0) #(struct:point 90/11 175/4) #(struct:point"
 #" 0 175/4)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 1800/11 0) #(struct:point 1800/11 17"
 #"5) #(struct:point 0 175)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 765/11 245/4 #(struct:translate 0 0 #(struct:polygo"
 #"n (#(struct:point 0 0) #(struct:point 90/11 0) #(struct:point 90/11 "
 #"175/4) #(struct:point 0 175/4)) 255 \"blue\"))) #(struct:translate 0"
 #" 0 #(struct:crop (#(struct:point 0 0) #(struct:point 1800/11 0) #(st"
 #"ruct:point 1800/11 175) #(struct:point 0 175)) #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 765/11 105/4 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 270/11 0)"
 #" #(struct:point 270/11 35) #(struct:point 0 35)) 255 \"blue\"))) #(s"
 #"truct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poin"
 #"t 1800/11 0) #(struct:point 1800/11 175) #(struct:point 0 175)) #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 810/11 205/22"
 #" #(struct:translate 90/11 90/11 #(struct:ellipse 180/11 180/11 0 255"
 #" \"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 "
 #"0) #(struct:point 1800/11 0) #(struct:point 1800/11 175) #(struct:po"
 #"int 0 175)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) "
 #"#(struct:point 1800/11 0) #(struct:point 1800/11 175) #(struct:point"
 #" 0 175)) outline #(struct:pen \"black\" 2 solid round round)))) #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 1800/11 0) #(struct:point 1800/11 175) #("
 #"struct:point 0 175)) 255 \"white\"))))))))))))))))))))))))))))))))))"
 #")))))))) #(struct:bb 1800/11 175 175.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"person-image-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 17 #"person-first-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 24 3 2 #" ("
0 0 14 3 16 #"person-last-name"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 3 #")) "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cal-winprop"
0 0 24 3 2 #" ("
0 0 14 3 13 #"person-weight"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 5 #"))) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cal-hinprop"
0 0 24 3 2 #" ("
0 0 14 3 13 #"person-height"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 5 #"))) ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 14 3 7 #"perinfo"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 259
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";ex22"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";ex23"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 256
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";ex 24"
0 0 24 29 1 #"\n"
0           0
